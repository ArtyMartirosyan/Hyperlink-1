{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Timofey Fayzullin\\\\Documents\\\\GitHub\\\\frontend\\\\src\\\\components\\\\input-form.jsx\";\nimport './input-form.css';\nimport React from 'react'; // Accepts props: Array<InputNames>\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputForm extends React.Component {\n  constructor(props) {\n    super(props); // Setup the state to map each input to its current value\n\n    this.handleChange = event => {\n      const {\n        id,\n        value\n      } = event.target;\n      this.setState(prevState => ({ ...prevState,\n        [id]: value\n      }));\n    };\n\n    let _state = {};\n\n    for (const input of props.inputs) {\n      _state[input] = \"\";\n    }\n\n    this.state = _state;\n  }\n\n  // TODO: Make want to be able to emit the state to its parent component\n  render() {\n    const inputs = this.props.inputs.map(input => /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      label: input,\n      id: input,\n      placeholder: input,\n      value: this.state[input],\n      onChange: this.handleChange\n    }, input, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n    const buttons = this.props.buttons.map(button => /*#__PURE__*/_jsxDEV(\"button\", {\n      id: button.name,\n      onClick: button.callback,\n      children: button.name\n    }, button.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"InputForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\" \", inputs, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\" \", buttons, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default InputForm;","map":{"version":3,"sources":["C:/Users/Timofey Fayzullin/Documents/GitHub/frontend/src/components/input-form.jsx"],"names":["React","InputForm","Component","constructor","props","handleChange","event","id","value","target","setState","prevState","_state","input","inputs","state","render","map","buttons","button","name","callback"],"mappings":";AAAA,OAAO,kBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;;AAHiB,SAYnBC,YAZmB,GAYHC,KAAD,IAAW;AACxB,YAAM;AAACC,QAAAA,EAAD;AAAKC,QAAAA;AAAL,UAAcF,KAAK,CAACG,MAA1B;AACA,WAAKC,QAAL,CAAcC,SAAS,KAAK,EAC1B,GAAGA,SADuB;AAE1B,SAACJ,EAAD,GAAMC;AAFoB,OAAL,CAAvB;AAID,KAlBkB;;AAIjB,QAAII,MAAM,GAAG,EAAb;;AACA,SAAI,MAAMC,KAAV,IAAmBT,KAAK,CAACU,MAAzB,EAAiC;AAC/BF,MAAAA,MAAM,CAACC,KAAD,CAAN,GAAgB,EAAhB;AACD;;AAED,SAAKE,KAAL,GAAaH,MAAb;AACD;;AAUD;AAEAI,EAAAA,MAAM,GAAG;AACP,UAAMF,MAAM,GAAG,KAAKV,KAAL,CAAWU,MAAX,CAAkBG,GAAlB,CAAsBJ,KAAK,iBACxC;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,KAAK,EAAEA,KAFT;AAGE,MAAA,EAAE,EAAEA,KAHN;AAIE,MAAA,WAAW,EAAEA,KAJf;AAME,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWF,KAAX,CANT;AAOE,MAAA,QAAQ,EAAE,KAAKR;AAPjB,OAKOQ,KALP;AAAA;AAAA;AAAA;AAAA,YADa,CAAf;AAYA,UAAMK,OAAO,GAAG,KAAKd,KAAL,CAAWc,OAAX,CAAmBD,GAAnB,CAAuBE,MAAM,iBAC3C;AAAQ,MAAA,EAAE,EAAEA,MAAM,CAACC,IAAnB;AAAyB,MAAA,OAAO,EAAED,MAAM,CAACE,QAAzC;AAAA,gBACGF,MAAM,CAACC;AADV,OAAwDD,MAAM,CAACC,IAA/D;AAAA;AAAA;AAAA;AAAA,YADc,CAAhB;AAMA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAA,gCACI;AAAA,0BAAMN,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,0BAAMI,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAlDqC;;AAqDxC,eAAejB,SAAf","sourcesContent":["import './input-form.css';\r\nimport React from 'react'\r\n\r\n// Accepts props: Array<InputNames>\r\nclass InputForm extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n            \r\n    // Setup the state to map each input to its current value\r\n    let _state = {};\r\n    for(const input of props.inputs) {\r\n      _state[input] = \"\"\r\n    }\r\n\r\n    this.state = _state; \r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const {id, value} = event.target;\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  }\r\n\r\n  // TODO: Make want to be able to emit the state to its parent component\r\n\r\n  render() {\r\n    const inputs = this.props.inputs.map(input => \r\n      <input\r\n        className='input'\r\n        label={input}\r\n        id={input}\r\n        placeholder={input}\r\n        key={input}\r\n        value={this.state[input]}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n\r\n    const buttons = this.props.buttons.map(button => \r\n      <button id={button.name} onClick={button.callback} key={button.name}>\r\n        {button.name}\r\n      </button>\r\n    )\r\n\r\n    return (\r\n      <div className=\"InputForm\">\r\n          <form> \r\n              <ul> {inputs} </ul>\r\n              <ul> {buttons} </ul> \r\n          </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputForm;\r\n"]},"metadata":{},"sourceType":"module"}